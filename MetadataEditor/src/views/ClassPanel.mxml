<?xml version="1.0" encoding="utf-8"?>
<f:LayoutGroup xmlns:f="library://ns.feathersui.com/mxml"
			   xmlns:fx="http://ns.adobe.com/mxml/2009"
			   width="200"
			   creationComplete="init(event)" xmlns:renderers="views.renderers.*">
	<fx:Script>
		<![CDATA[
			import events.MEvent;
			
			import feathers.data.ListCollection;
			import feathers.layout.VerticalLayoutData;
			
			import game.core.ClassRegister;
			
			import starling.events.Event;
			
			private const META_PACKAGE:String = "max.modules.meta";
			private const EXCLUDES:Array = ["MetaDataVO", "CoinsVO", "UniversalVO"];
			
			[Bindable]
			public var selectedClass:String;
			
			protected function init(event:starling.events.Event):void
			{
				panel.headerProperties.title = "Metadata Classes";
				layoutData = new VerticalLayoutData(NaN, 100);
				ClassRegister.registerVO();
				getMetaClasses();
			}
			
			private function getMetaClasses():void
			{
				var allDefs:__AS3__.vec.Vector.<String> = ApplicationDomain.currentDomain.getQualifiedDefinitionNames();
				var metas:Array = [];
				for (var i:int = 0; i < allDefs.length; i++) 
				{
					var def:String = allDefs[i];
					if (def.indexOf(META_PACKAGE) == 0 && !isExcluded(def))
					{
						metas.push(def);
					}
				}
				metas = metas.sort();
				list.dataProvider = new ListCollection(metas);
			}
			
			private function isExcluded(def:String):Boolean
			{
				for (var i:int = 0; i < EXCLUDES.length; i++) 
				{
					var exc:String = EXCLUDES[i];
					if (def.indexOf(exc) >= 0)
						return true;
				}
				return false;
			}
			
			protected function onChange(event:starling.events.Event):void
			{
				var meta:String = list.selectedItem;
				selectedClass = meta;
				dispatchEvent(new events.MEvent(Event.CHANGE, meta));
			}
			
		]]>
	</fx:Script>
	<fx:Metadata>
		[Event(name="change", type="events.MEvent")]
	</fx:Metadata>
	<f:Panel id="panel">
		<f:layout>
			<f:VerticalLayout percentHeight="100" percentWidth="100"/>
		</f:layout>
		<f:List dataProvider="{dataProvider}"
				id="list"
				change="onChange(event)"
				width="100%" height="100%">
			<f:itemRendererFactory>
				<fx:Component>
					<renderers:ClassItemRenderer labelField="name"/>
				</fx:Component>
			</f:itemRendererFactory>
			<f:layout>
				<f:VerticalLayout gap="2" paddingLeft="5"/>
			</f:layout>
			<f:layoutData>
				<f:VerticalLayoutData percentWidth="100" percentHeight="100"/>
			</f:layoutData>
		</f:List>
	</f:Panel>
</f:LayoutGroup>
